spring.freemarker.checkTemplateLocation=false
spring.profiles.active=dev
#时间格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#时区设置
spring.jackson.time-zone=GMT+8

#应用自定义配置(如：classpath:log4j2-dev.xml)
logging.config=

#制定扩展分析的类
context.initializer.classes=com.example.demo.extendedanalysis.MyApplicationContextInitializer2


#spring集成Mybatis环境
mybatis.type-aliases-package=com.example.demo.domain
#加载Mybatis配置文件
mybatis.mapper-locations = classpath:mapper/*Mapper.xml
mybatis.config-location = classpath:mapper/config/sqlMapConfig.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/metadata_zyy?characterEncoding=utf8&useSSL=false&serverTimezone=Hongkong&rewriteBatchedStatements=true 
spring.datasource.password=zy6210
spring.datasource.username=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.freemarker.cache=true
spring.freemarker.charset=utf-8
spring.freemarker.content-type=text/html
spring.freemarker.check-template-location=true

#禁用视图
spring.jpa.open-in-view=false

#不使用默认icon
spring.mvc.favicon.enabled = false

#swagger2的配置
swagger2.basepackage=com.example.demo

#kafka配置
#指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.244.132:9092,192.168.244.133:9092
#===============kafka provider  =======================
spring.kafka.producer.retries=1
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#===============kafka consumer  =======================
#指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer








